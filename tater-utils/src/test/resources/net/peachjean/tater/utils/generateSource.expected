package com.example.testa;

import org.apache.commons.lang3.builder.ToStringBuilder;
import com.google.common.base.Preconditions;
import net.peachjean.tater.utils.*;

@SuppressWarnings({"UnusedDeclaration", "ClassExplicitlyAnnotation"})
@javax.annotation.Generated(value="class net.peachjean.tater.utils.ImplementedDescriptor", date="1969-12-31T18:00:00-06:00")
public class MyAnnotationImpl implements com.example.testa.MyAnnotation {

    private final java.lang.String field1;

    public java.lang.String field1() {
        return field1;
    }
    private final int field2;

    public int field2() {
        return field2;
    }
    private final float field3;

    public float field3() {
        return field3;
    }
    private final long field4;

    public long field4() {
        return field4;
    }
    private final double field5;

    public double field5() {
        return field5;
    }
    private final java.lang.Class field6;

    public java.lang.Class field6() {
        return field6;
    }
    private final net.peachjean.tater.utils.ImplementedDescriptorTest$MyEnum field7;

    public net.peachjean.tater.utils.ImplementedDescriptorTest$MyEnum field7() {
        return field7;
    }
    private final byte field8;

    public byte field8() {
        return field8;
    }
    private final char field9;

    public char field9() {
        return field9;
    }
    private final short field10;

    public short field10() {
        return field10;
    }
    private final boolean field11;

    public boolean field11() {
        return field11;
    }
    private final java.lang.String noDefault;

    public java.lang.String noDefault() {
        return noDefault;
    }
    private final java.lang.String[] array1;

    public java.lang.String[] array1() {
        return array1.clone();
    }
    private final int[] array2;

    public int[] array2() {
        return array2.clone();
    }
    private final float[] array3;

    public float[] array3() {
        return array3.clone();
    }
    private final long[] array4;

    public long[] array4() {
        return array4.clone();
    }
    private final double[] array5;

    public double[] array5() {
        return array5.clone();
    }
    private final java.lang.Class[] array6;

    public java.lang.Class[] array6() {
        return array6.clone();
    }
    private final net.peachjean.tater.utils.ImplementedDescriptorTest.MyEnum[] array7;

    public net.peachjean.tater.utils.ImplementedDescriptorTest.MyEnum[] array7() {
        return array7.clone();
    }
    private final byte[] array8;

    public byte[] array8() {
        return array8.clone();
    }
    private final char[] array9;

    public char[] array9() {
        return array9.clone();
    }
    private final short[] array10;

    public short[] array10() {
        return array10.clone();
    }
    private final boolean[] array11;

    public boolean[] array11() {
        return array11.clone();
    }


    private MyAnnotationImpl(final java.lang.String field1, final int field2, final float field3, final long field4, final double field5, final java.lang.Class field6, final net.peachjean.tater.utils.ImplementedDescriptorTest$MyEnum field7, final byte field8, final char field9, final short field10, final boolean field11, final java.lang.String noDefault, final java.lang.String[] array1, final int[] array2, final float[] array3, final long[] array4, final double[] array5, final java.lang.Class[] array6, final net.peachjean.tater.utils.ImplementedDescriptorTest.MyEnum[] array7, final byte[] array8, final char[] array9, final short[] array10, final boolean[] array11) {
              this.field1 = Preconditions.checkNotNull(field1, "field1 has no default value.  It must be specified.");
                    this.field2 = Preconditions.checkNotNull(field2, "field2 has no default value.  It must be specified.");
                    this.field3 = Preconditions.checkNotNull(field3, "field3 has no default value.  It must be specified.");
                    this.field4 = Preconditions.checkNotNull(field4, "field4 has no default value.  It must be specified.");
                    this.field5 = Preconditions.checkNotNull(field5, "field5 has no default value.  It must be specified.");
                    this.field6 = Preconditions.checkNotNull(field6, "field6 has no default value.  It must be specified.");
                    this.field7 = Preconditions.checkNotNull(field7, "field7 has no default value.  It must be specified.");
                    this.field8 = Preconditions.checkNotNull(field8, "field8 has no default value.  It must be specified.");
                    this.field9 = Preconditions.checkNotNull(field9, "field9 has no default value.  It must be specified.");
                    this.field10 = Preconditions.checkNotNull(field10, "field10 has no default value.  It must be specified.");
                    this.field11 = Preconditions.checkNotNull(field11, "field11 has no default value.  It must be specified.");
                    this.noDefault = Preconditions.checkNotNull(noDefault, "noDefault has no default value.  It must be specified.");
                    this.array1 = Preconditions.checkNotNull(array1, "array1 has no default value.  It must be specified.");
                    this.array2 = Preconditions.checkNotNull(array2, "array2 has no default value.  It must be specified.");
                    this.array3 = Preconditions.checkNotNull(array3, "array3 has no default value.  It must be specified.");
                    this.array4 = Preconditions.checkNotNull(array4, "array4 has no default value.  It must be specified.");
                    this.array5 = Preconditions.checkNotNull(array5, "array5 has no default value.  It must be specified.");
                    this.array6 = Preconditions.checkNotNull(array6, "array6 has no default value.  It must be specified.");
                    this.array7 = Preconditions.checkNotNull(array7, "array7 has no default value.  It must be specified.");
                    this.array8 = Preconditions.checkNotNull(array8, "array8 has no default value.  It must be specified.");
                    this.array9 = Preconditions.checkNotNull(array9, "array9 has no default value.  It must be specified.");
                    this.array10 = Preconditions.checkNotNull(array10, "array10 has no default value.  It must be specified.");
                    this.array11 = Preconditions.checkNotNull(array11, "array11 has no default value.  It must be specified.");
            
    }

    public Class<com.example.testa.MyAnnotation> annotationType() {
      return com.example.testa.MyAnnotation.class;
    }

    public int hashCode() {
      int result = 0;
              result += ("field1".hashCode() * 127) ^ ImplementationHelper.hashCode(field1);
                    result += ("field2".hashCode() * 127) ^ ImplementationHelper.hashCode(field2);
                    result += ("field3".hashCode() * 127) ^ ImplementationHelper.hashCode(field3);
                    result += ("field4".hashCode() * 127) ^ ImplementationHelper.hashCode(field4);
                    result += ("field5".hashCode() * 127) ^ ImplementationHelper.hashCode(field5);
                    result += ("field6".hashCode() * 127) ^ ImplementationHelper.hashCode(field6);
                    result += ("field7".hashCode() * 127) ^ ImplementationHelper.hashCode(field7);
                    result += ("field8".hashCode() * 127) ^ ImplementationHelper.hashCode(field8);
                    result += ("field9".hashCode() * 127) ^ ImplementationHelper.hashCode(field9);
                    result += ("field10".hashCode() * 127) ^ ImplementationHelper.hashCode(field10);
                    result += ("field11".hashCode() * 127) ^ ImplementationHelper.hashCode(field11);
                    result += ("noDefault".hashCode() * 127) ^ ImplementationHelper.hashCode(noDefault);
                    result += ("array1".hashCode() * 127) ^ ImplementationHelper.hashCode(array1);
                    result += ("array2".hashCode() * 127) ^ ImplementationHelper.hashCode(array2);
                    result += ("array3".hashCode() * 127) ^ ImplementationHelper.hashCode(array3);
                    result += ("array4".hashCode() * 127) ^ ImplementationHelper.hashCode(array4);
                    result += ("array5".hashCode() * 127) ^ ImplementationHelper.hashCode(array5);
                    result += ("array6".hashCode() * 127) ^ ImplementationHelper.hashCode(array6);
                    result += ("array7".hashCode() * 127) ^ ImplementationHelper.hashCode(array7);
                    result += ("array8".hashCode() * 127) ^ ImplementationHelper.hashCode(array8);
                    result += ("array9".hashCode() * 127) ^ ImplementationHelper.hashCode(array9);
                    result += ("array10".hashCode() * 127) ^ ImplementationHelper.hashCode(array10);
                    result += ("array11".hashCode() * 127) ^ ImplementationHelper.hashCode(array11);
            

      return result;
    }

    @SuppressWarnings("SimplifiableConditionalExpression")
    public boolean equals(Object other) {
      return other instanceof com.example.testa.MyAnnotation
         ? doEquals((com.example.testa.MyAnnotation) other)
         : false;
    }

    private boolean doEquals(com.example.testa.MyAnnotation other) {
            if (this == other) {
                return true;
            }

                          if(!ImplementationHelper.isEquals(this.field1(), other.field1())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field2(), other.field2())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field3(), other.field3())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field4(), other.field4())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field5(), other.field5())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field6(), other.field6())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field7(), other.field7())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field8(), other.field8())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field9(), other.field9())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field10(), other.field10())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.field11(), other.field11())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.noDefault(), other.noDefault())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array1(), other.array1())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array2(), other.array2())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array3(), other.array3())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array4(), other.array4())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array5(), other.array5())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array6(), other.array6())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array7(), other.array7())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array8(), other.array8())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array9(), other.array9())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array10(), other.array10())) {
                            return false;
                          }
                                      if(!ImplementationHelper.isEquals(this.array11(), other.array11())) {
                            return false;
                          }
                        
            return true;

    }

    public String toString() {
      ToStringBuilder builder = ImplementationHelper.toStringBuilder(this);
              builder.append("field1", field1());
                    builder.append("field2", field2());
                    builder.append("field3", field3());
                    builder.append("field4", field4());
                    builder.append("field5", field5());
                    builder.append("field6", field6());
                    builder.append("field7", field7());
                    builder.append("field8", field8());
                    builder.append("field9", field9());
                    builder.append("field10", field10());
                    builder.append("field11", field11());
                    builder.append("noDefault", noDefault());
                    builder.append("array1", array1());
                    builder.append("array2", array2());
                    builder.append("array3", array3());
                    builder.append("array4", array4());
                    builder.append("array5", array5());
                    builder.append("array6", array6());
                    builder.append("array7", array7());
                    builder.append("array8", array8());
                    builder.append("array9", array9());
                    builder.append("array10", array10());
                    builder.append("array11", array11());
            
      return builder.build();
    }

    public static com.example.testa.MyAnnotation build() {
      return new Builder().build();
    }

    @SuppressWarnings("unchecked")
    public static Builder field1(final java.lang.String v) {
      return new Builder().field1(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field2(final int v) {
      return new Builder().field2(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field3(final float v) {
      return new Builder().field3(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field4(final long v) {
      return new Builder().field4(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field5(final double v) {
      return new Builder().field5(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field6(final java.lang.Class v) {
      return new Builder().field6(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field7(final net.peachjean.tater.utils.ImplementedDescriptorTest$MyEnum v) {
      return new Builder().field7(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field8(final byte v) {
      return new Builder().field8(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field9(final char v) {
      return new Builder().field9(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field10(final short v) {
      return new Builder().field10(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder field11(final boolean v) {
      return new Builder().field11(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder noDefault(final java.lang.String v) {
      return new Builder().noDefault(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array1(final java.lang.String ... v) {
      return new Builder().array1(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array2(final int ... v) {
      return new Builder().array2(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array3(final float ... v) {
      return new Builder().array3(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array4(final long ... v) {
      return new Builder().array4(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array5(final double ... v) {
      return new Builder().array5(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array6(final java.lang.Class ... v) {
      return new Builder().array6(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array7(final net.peachjean.tater.utils.ImplementedDescriptorTest.MyEnum ... v) {
      return new Builder().array7(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array8(final byte ... v) {
      return new Builder().array8(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array9(final char ... v) {
      return new Builder().array9(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array10(final short ... v) {
      return new Builder().array10(v);
    }
    @SuppressWarnings("unchecked")
    public static Builder array11(final boolean ... v) {
      return new Builder().array11(v);
    }


    public static class Builder {
      com.example.testa.MyAnnotation build() {
        return new MyAnnotationImpl(field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, noDefault, array1, array2, array3, array4, array5, array6, array7, array8, array9, array10, array11);
      }

         @SuppressWarnings("unchecked")
         private java.lang.String field1 = "value1";

         @SuppressWarnings("unchecked")
         public Builder field1(final java.lang.String v) {
           this.field1 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private int field2 = 5;

         @SuppressWarnings("unchecked")
         public Builder field2(final int v) {
           this.field2 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private float field3 = 5.5f;

         @SuppressWarnings("unchecked")
         public Builder field3(final float v) {
           this.field3 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private long field4 = 5l;

         @SuppressWarnings("unchecked")
         public Builder field4(final long v) {
           this.field4 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private double field5 = 5.5d;

         @SuppressWarnings("unchecked")
         public Builder field5(final double v) {
           this.field5 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private java.lang.Class field6 = com.example.testa.MyAnnotation.class;

         @SuppressWarnings("unchecked")
         public Builder field6(final java.lang.Class v) {
           this.field6 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private net.peachjean.tater.utils.ImplementedDescriptorTest$MyEnum field7 = ONE;

         @SuppressWarnings("unchecked")
         public Builder field7(final net.peachjean.tater.utils.ImplementedDescriptorTest$MyEnum v) {
           this.field7 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private byte field8 = 5;

         @SuppressWarnings("unchecked")
         public Builder field8(final byte v) {
           this.field8 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private char field9 = 'c';

         @SuppressWarnings("unchecked")
         public Builder field9(final char v) {
           this.field9 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private short field10 = 3;

         @SuppressWarnings("unchecked")
         public Builder field10(final short v) {
           this.field10 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private boolean field11 = true;

         @SuppressWarnings("unchecked")
         public Builder field11(final boolean v) {
           this.field11 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private java.lang.String noDefault = null;

         @SuppressWarnings("unchecked")
         public Builder noDefault(final java.lang.String v) {
           this.noDefault = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private java.lang.String[] array1 = new String[] {"value1"};

         @SuppressWarnings("unchecked")
         public Builder array1(final java.lang.String ... v) {
           this.array1 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private int[] array2 = new int[] {5};

         @SuppressWarnings("unchecked")
         public Builder array2(final int ... v) {
           this.array2 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private float[] array3 = new float[] {5.5f};

         @SuppressWarnings("unchecked")
         public Builder array3(final float ... v) {
           this.array3 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private long[] array4 = new long[] {5l};

         @SuppressWarnings("unchecked")
         public Builder array4(final long ... v) {
           this.array4 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private double[] array5 = new double[] {5.5d};

         @SuppressWarnings("unchecked")
         public Builder array5(final double ... v) {
           this.array5 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private java.lang.Class[] array6 = new Class[] {com.example.testa.MyAnnotation.class};

         @SuppressWarnings("unchecked")
         public Builder array6(final java.lang.Class ... v) {
           this.array6 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private net.peachjean.tater.utils.ImplementedDescriptorTest.MyEnum[] array7 = new MyEnum[] {ONE};

         @SuppressWarnings("unchecked")
         public Builder array7(final net.peachjean.tater.utils.ImplementedDescriptorTest.MyEnum ... v) {
           this.array7 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private byte[] array8 = new byte[] {5};

         @SuppressWarnings("unchecked")
         public Builder array8(final byte ... v) {
           this.array8 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private char[] array9 = new char[] {'c'};

         @SuppressWarnings("unchecked")
         public Builder array9(final char ... v) {
           this.array9 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private short[] array10 = new short[] {3};

         @SuppressWarnings("unchecked")
         public Builder array10(final short ... v) {
           this.array10 = v;
           return this;
         }
             @SuppressWarnings("unchecked")
         private boolean[] array11 = new boolean[] {true};

         @SuppressWarnings("unchecked")
         public Builder array11(final boolean ... v) {
           this.array11 = v;
           return this;
         }
       
    }
}